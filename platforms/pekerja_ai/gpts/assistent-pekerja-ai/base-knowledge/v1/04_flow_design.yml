# file: 04_flow_design.yml
# generated: 2025-05-12 (direvisi berdasarkan appConfig lengkap)
# top_keys: FlowDesign_Core, FlowTriggers_AutomatedExecution, UseCase_Examples_Detailed_Walkthroughs

FlowDesign_Core:
  ContohFlowMenyimpanDataOtomatisBotGoogleSheets:
    u: pekerja_ai_doc_flow_google_sheets
    r: Menjelaskan cara kerja flow yang menyimpan data otomatis dari bot ke spreadsheet Google Sheets melalui integrasi, seperti data leads, feedback, atau pemesanan secara real-time.
    s:
      - t: "Langkah 1: Pastikan Integrasi Google Sheets Aktif"
        sub:
          - t: "Akses: **appConfig.header.settings** (klik ikon Settings/pojok kanan atas) > **[Tab] integrations** (dalam `SettingsConnectedPlatforms`)."
          - t: "Cari item dengan `name: Google Sheets`. Klik tombol **'Connect'** (`SettingsConnectedPlatforms.integrations[name=Google Sheets].button`). Ikuti proses otorisasi."
      - t: "Langkah 2: Membuat Aksi Google Sheets di Flow Editor"
        sub:
          - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**."
          - t: "Klik tombol **'add'** (`appConfig.sidebar.menu[title=Flows].main.tabs[title=Flows].sections[title=Flows].addButton`). Dialog 'Add New Flow' akan muncul. Isi `flowName` (input). Klik 'Save' atau tombol konfirmasi."
          - t: "Atau, pilih flow yang sudah ada dari 'table' dan klik namanya untuk masuk ke `flowEditorPage`."
          - t: "Di `flowEditorPage.mainCanvas`, tambahkan node baru. Dari `nodeCollection`, pilih node dengan `type: ActionsNode`."
          - t: "Klik node 'ActionsNode' yang baru ditambahkan. Sidebar konfigurasi (`configRef: FlowSidebarActions_ActionDropdownOptions`) akan muncul."
          - t: "Di sidebar, pilih grup **'GoogleSheets'** > pilih aksi dengan `label: Google Sheets Action`."
          - t: "Dialog 'Google Sheets' (`FlowSidebarActions_ActionDropdownOptions.GoogleSheets[label='Google Sheets Action'].dialog`) akan muncul. Konfigurasi field:"
            sub:
              - t: "`actionSelector` (type: select, label: Action): Pilih 'send data'."
              - t: "`spreadsheetSelector` (type: select, label: Spreadsheet): Pilih Spreadsheet dari `dataSource: existingSpreadsheets`. Jika belum ada, klik `addNewButton` (`label: add new`, action: route to `https://client.pekerja.ai/en/spreadsheets`)."
              - t: "`worksheetSelector` (type: select, label: Worksheet): Pilih Worksheet dari `dataSource: selectedSpreadsheetSheets`."
              - t: "Di `customFieldMapping`, klik tombol 'add' atau '+' untuk menambahkan pemetaan. Pilih `customFieldSelector` dan isi `googleColumnTitleSelector`."
          - t: "Klik 'Save' atau tombol konfirmasi dialog. Hubungkan node 'ActionsNode' ini dalam alur flow Anda."
          - t: "Klik tombol **'Publish'** di `flowEditorPage.header.publishButton`."

  ContohFlowMenganalisisGambarDikirimPenggunaAI:
    u: pekerja_ai_doc_flow_image_analysis
    r: Menjelaskan flow yang memungkinkan bot menganalisis gambar (foto produk, dokumen) yang dikirim pengguna menggunakan kecerdasan AI dan memberikan hasil analisis.
    s:
      - t: "Langkah 1: Menangkap Input Gambar dari Pengguna di Flow Editor"
        sub:
          - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Pilih/buat flow."
          - t: "Tambahkan node dengan `type: SendMessage` dari `nodeCollection`."
          - t: "Klik node 'SendMessage'. Sidebar konfigurasi (`sidebarConfig`) akan muncul."
          - t: "Di `addContentButton` (`label: + Add Content`), pilih menu item dengan `label: Get User Data`."
          - t: "Konfigurasi 'Get User Data' (`config`):"
            sub:
              - t: "Isi `messageInput` (misal, 'Silakan unggah gambar Anda')."
              - t: "Klik tombol edit (ikon pensil atau tombol 'edit') untuk membuka `editButtonDialog`."
              - t: "Di `replyTypeDropdown`, pilih 'Image'."
              - t: "Pada `saveResponseToCustomField` (`<<: *commonSaveToCustomFieldConfig`), pilih Custom Field untuk menyimpan URL gambar. Jika belum ada, klik `addCustomFieldButtonRef` (`AddCustomFieldButtonAndDialog`) untuk membuat baru."
              - t: "Klik 'Save' atau konfirmasi."
      - t: "Langkah 2: Menganalisis Gambar dengan AI"
        sub:
          - t: "Setelah output 'Data was saved' dari node 'Get User Data', tambahkan node dengan `type: ActionsNode`."
          - t: "Klik node 'ActionsNode'. Di sidebar konfigurasi (`configRef: FlowSidebarActions_ActionDropdownOptions`), pilih grup **'OpenAI'** > aksi dengan `label: Analyze image`."
          - t: "Konfigurasi `config` aksi 'Analyze image':"
            sub:
              - t: "`imageSource` (type: customFieldSelect, label: Image): Pilih Custom Field tempat URL gambar disimpan."
              - t: "`prompt` (type: input, label: Prompt): Masukkan prompt (misal, 'whats in this image?')."
              - t: "`modelSelector` (options: GPT-4o mini, GPT-4o): Pilih model."
              - t: "`saveToCustomField` (`<<: *commonSaveToCustomFieldConfig`): Pilih Custom Field untuk menyimpan hasil analisis."
      - t: "Langkah 3: Mengirim Hasil Analisis"
        sub:
          - t: "Tambahkan node `type: SendMessage` berikutnya."
          - t: "Klik node. Di `addContentButton`, pilih `label: Text`. Pada `config.textInput`, isi dengan variabel Custom Field hasil analisis (misal, `{{hasil_analisis_gambar}}`)."
          - t: "Hubungkan semua node dan klik **'Publish'** (`flowEditorPage.header.publishButton`)."

  ContohFlowMengirimEmailOtomatisPenggunaAdmin:
    u: pekerja_ai_doc_flow_send_email
    r: Mengatur bot untuk mengirim email secara otomatis kepada pengguna atau admin, misalnya notifikasi order, hasil registrasi, dsb., setelah channel Email terhubung.
    s:
      - t: "Langkah 1: Pastikan Channel Email Terhubung"
        sub:
          - t: "Akses: **appConfig.header.settings** (ikon Settings/pojok kanan atas/logo pekerja ai) > **[Tab] channels**."
          - t: "Cari item `name: Email`. Klik tombol **'Connect'** (`SettingsConnectedPlatforms.channels[name=Email].button`). Ikuti proses koneksi."
      - t: "Langkah 2: Membuat Aksi Kirim Email di Flow Editor"
        sub:
          - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Pilih/buat flow."
          - t: "Tambahkan node dengan `type: SendEmail` dari `nodeCollection`."
          - t: "Klik node 'SendEmail'. Sidebar konfigurasi (`sidebarConfig`) akan muncul. Isi `fields`:"
            sub:
              - t: "`emailTopic` (select, placeholder: type email topic)."
              - t: "`emailFrom` (input, placeholder: `{{email}}`)."
              - t: "`emailTo` (input, placeholder: `{{email}}` atau alamat admin)."
              - t: "`emailSubject` (input, placeholder: subject)."
              - t: "`Preheader` (input, placeholder: preheader)."
              - t: "`headline` (input, placeholder: enter your headline)."
              - t: "`image` (`<<: *commonImageUploader`)."
              - t: "`text` (input, placeholder: enter your text)."
              - t: "Tambahkan tombol jika perlu melalui `componentRef: FlowSidebarNode_AddButtonDialog`."
              - t: "`code` (input, placeholder: footer/unsubscribe link)."
              - t: "(Opsional) Gunakan `addContent` (`label: +Add Content`, action: `addEmailContentBlock`) untuk menambah blok konten terstruktur (headline, image, text, button, code)."
          - t: "Hubungkan node dan klik **'Publish'** (`flowEditorPage.header.publishButton`)."

  FlowDefaultReplySederhana:
    u: https://youtu.be/GAIJBjGgkrk
    r: Cara membuat default reply. Default reply adalah pesan otomatis yang dikirim bot saat tidak memahami pesan dari pengguna.
    s:
      - t: "Langkah 1: Atur Default Reply di Pengaturan Umum"
        sub:
          - t: "Akses: **appConfig.header.settings** (ikon Settings/Gear) > **[Tab] general** (dalam `SettingsConnectedPlatforms`)."
          - t: "Cari field/label **'Default Reply'**. Klik dropdown di sebelahnya (atau mekanisme UI yang ada untuk memilih/membuat flow)."
          - t: "Pilih opsi untuk membuat flow baru (misal, 'Create New Flow') atau pilih flow yang sudah ada dari `_commonFlowSelector` jika tersedia."
      - t: "Langkah 2: Jika Membuat Flow Baru"
        sub:
          - t: "Anda akan diarahkan ke dialog 'Add New Flow' (**appConfig.sidebar.menu[title=Flows].main.tabs[title=Flows].sections[title=Flows].addButton.action**). Isi `flowName` (input). Klik 'Save' atau konfirmasi."
          - t: "Kemudian Anda akan masuk ke `flowEditorPage`."
      - t: "Langkah 3: Desain Flow di Flow Editor"
        sub:
          - t: "Di `flowEditorPage.mainCanvas`, dari 'Starting Step' (node awal), tambahkan node `type: SendMessage`."
          - t: "Klik node 'SendMessage'. Di `sidebarConfig.addContentButton`, pilih `label: Text`."
          - t: "Pada `config.textInput`, ketik pesan: `Halo, {{first_name}} kami kurang mengerti maksud Anda. Kami bantu hubungkan ke agen ya.`"
          - t: "Gunakan `config.addButtonRef: FlowSidebarNode_AddButtonDialog` (tombol `+ Add Button`). Dialog 'add button' (`FlowSidebarNode_AddButtonDialog`) akan muncul."
            sub:
              - t: "`buttonName` (input): `Hubungkan ke Agen`."
              - t: "`action` (select): Pilih 'Perform Action'."
              - t: "Klik 'Save' pada dialog tombol."
          - t: "Dari output tombol 'Hubungkan ke Agen' pada node 'SendMessage', tambahkan node `type: ActionsNode`."
          - t: "Klik node 'ActionsNode'. Di `configRef: FlowSidebarActions_ActionDropdownOptions`, pilih grup **'Inbox'** > aksi `label: Transfer Conversation to Human`."
          - t: "(Opsional) Pada `config` aksi tersebut, centang `notifyAdminCheckbox` jika perlu."
          - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."
      - t: "Catatan Error: Periksa koneksi antar node jika ada masalah."
      - t: "Gunakan tombol **'preview'** (`flowEditorPage.button[label=preview]`) atau tes langsung."

  MembangunAlurKerjaAIFlowsKompleksBerbagaiKontenTindakan:
    u: https://youtu.be/zKv4uwVO1Fg
    r: Video ini membahas cara memanfaatkan fitur 'Flows' untuk membangun alur kerja otomatis yang kompleks.
    s:
      - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Klik tombol **'add'** atau pilih flow yang ada."
      - t: "Di `flowEditorPage.mainCanvas`, tambahkan node dari `nodeCollection` (misal, `type: SendMessage`, `type: ActionsNode`, `type: Condition`, dll.)."
      - t: "Untuk node **'SendMessage'**:"
        sub:
          - t: "Klik node. Di `sidebarConfig`, atur `nodeLabelInput` (nama node), `messageTypeSelector`."
          - t: "Gunakan `addContentButton` untuk memilih `menuItems` konten: 'Text' (`config.textInput`), 'Image' (`config.uploader`), 'Card' (`configRef: FlowSidebarNode_Card`), 'Carousel', 'Get User Data', 'Video', 'GIF', 'Typing', 'File', atau 'Actions' (`optionsRef: FlowSidebarActions_ActionDropdownOptions`)."
          - t: "Jika menambahkan 'Text' atau 'Card', gunakan `addButtonRef: FlowSidebarNode_AddButtonDialog` untuk membuat tombol interaktif."
      - t: "Untuk node **'ActionsNode'**:"
        sub:
          - t: "Klik node. `configRef: FlowSidebarActions_ActionDropdownOptions` akan aktif di sidebar. Pilih grup dan aksi yang diinginkan (misal, 'OpenAI' > 'Generate text', 'Tags' > 'Add Tag')."
      - t: "Hubungkan output satu node ke input node berikutnya."
      - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."

  DasarDasarFlowSidebarDragDrop: # Mengacu pada Flow Editor
    u: https://www.youtube.com/live/UKJGOqTxp7k?si=2o_F6pPLkhjFuZHu
    r: Memperkenalkan konsep Flow Editor untuk merakit alur interaksi AI.
    s:
      - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**."
      - t: "Klik tombol **'add'** (`sections[title=Flows].addButton`). Dialog 'Add New Flow' muncul. Isi `flowName`. Klik 'Save'/'Continue'."
      - t: "Di `flowEditorPage.mainCanvas`, Anda akan melihat 'Starting Step'."
      - t: "Untuk menambahkan node, klik kanan di canvas atau klik output node yang ada. Daftar node dari `nodeCollection` akan muncul. Pilih node yang diinginkan (misal, 'SendMessage', 'ActionsNode', 'Condition')."
      - t: "Node akan ditambahkan ke canvas. Anda bisa memindahkannya (drag-and-drop)."
      - t: "Hubungkan titik output satu node ke titik input node lain untuk membuat alur."
      - t: "Klik setiap node untuk membuka `sidebarConfig`nya di kanan. Konfigurasi detailnya."
      - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."

  VariabelSistemSepertiLast_inputPesan:
    u: https://www.youtube.com/live/pohCJefEdxY?si=2JdBCsE7BFw-foV-
    r: "Menjelaskan penggunaan variabel sistem seperti `{{last_input}}`."
    s:
      - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Pilih/buat flow."
      - t: "Pada node yang mendukung input teks, seperti `config.textInput` di `SendMessage > Text`, atau field `userMessage` di `ActionsNode > OpenAI > Generate text` (`<<: *commonUserMessageInputLastInput`)."
      - t: "Ketik `{{last_input}}` untuk menangkap pesan terakhir pengguna. Contoh: `Anda baru saja mengetik: {{last_input}}`."
      - t: "Variabel lain seperti `{{first_name}}`, `{{email}}` juga bisa digunakan jika datanya ada di kontak."
      - t: "Simpan konfigurasi node. Klik **'Publish'** (`flowEditorPage.header.publishButton`)."

FlowTriggers_AutomatedExecution:
  PekerjaBotResponsOtomatisBerdasarkanKataKunciPesanPengguna:
    u: pekerja_ai_doc_pekerja_bot
    r: Fitur Pekerja Bot (Auto-response bot) menyediakan respons otomatis terhadap pesan spesifik dari pelanggan secara cepat dan konsisten, berdasarkan kata kunci atau kalimat.
    s:
      - t: "Cara 1: Fitur Channel Spesifik (Contoh Instagram DM)"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Pekerja Bot] > [Tab] Instagram DM to DM**."
          - t: "Pada `content.userMessageSection.fields` (yang menggunakan `<<: *commonTextInputPlaceholder`), masukkan kata kunci atau kalimat pemicu."
          - t: "Pada `content.botResponseSection.options`, pilih respons: 'Text Message' (`type: textarea`) dan isi balasan, atau 'Flow' (`type: select`, `<<: *commonFlowSelector`) dan pilih flow."
          - t: "(Simpan jika ada tombolnya. UI ini mungkin untuk satu aturan global per channel, bukan list aturan)."
      - t: "Cara 2: Menggunakan Node 'Condition' di Flow Editor (Umum)"
        sub:
          - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Buat/edit flow."
          - t: "Setelah 'Starting Step', tambahkan node `type: Condition`."
          - t: "Klik node 'Condition'. Di `sidebarConfig.button[label=+Condition]` (yang menggunakan `componentRef: BtnForFilterOrCondition`), atur kondisi:"
            sub:
              - t: "`firstRowOptions`: Pilih 'System Fields' > 'LastUserInput'."
              - t: "`secondRowOptions`: Pilih 'Contains' (atau 'Is')."
              - t: "`thirdRowInputType`: Masukkan kata kunci Anda."
          - t: "Hubungkan output 'True' dari kondisi ke alur/node balasan yang sesuai."
          - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."

  MenjalankanFlowSecaraTerjadwalDripCampaigns:
    u: https://youtu.be/2F-p19HcoWk
    r: Video ini menjelaskan cara menggunakan fitur Drip Campaigns untuk menjadwalkan pengiriman Flow.
    s:
      - t: "Akses: **appConfig.sidebar.menu[title=Tools] > [Pilih tool] Drip Campaigns** (`tools[name='Drip Campaigns']`)."
      - t: "Di `pageContent.section[title='Drip Campaigns']`, klik `addButton` (`label: add`). Dialog 'Add New Drip Campaign' muncul."
      - t: "Isi `fields.campaignName` (input). Klik 'Save' atau konfirmasi."
      - t: "Pilih kampanye yang baru dibuat dari tabel. Konfigurasikan pesan di `pageContent.messageConfig`:"
        sub:
          - t: "`sendFlowSelector` (`<<: *commonFlowSelector`, label: Send): Pilih Flow."
          - t: "`sendAfterTimer` (type: timeDurationInput, label: After): Tentukan waktu."
          - t: "Gunakan `addMessageButton` (`label: + message`) untuk menambah langkah."
      - t: "Simpan pengaturan kampanye."

  MenjalankanFlowSecaraOtomatisTriggersParametersParameterPemicu: # Ini merujuk ke AI Parameters
    u: https://youtu.be/AyK_hdKtCZM
    r: Video ini menunjukkan cara mengatur AI Parameters (Parameter Pemicu) untuk secara otomatis menjalankan Flow.
    s:
      - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Ai Parameters**."
      - t: "Pada `section[title='Ai Parameters']`, klik `addButton` (`label: add`). Dialog 'Add New AI Parameter' muncul."
      - t: "Isi `fields.name` (input, placeholder: input Ai parameter name)."
      - t: "Di `configuration`:"
        sub:
          - t: "`whenThisHappens.triggerOptions` (type: select, label: Trigger Event): Pilih pemicu dari `groups` (Tags, Custom Fields, dll.)."
          - t: "`actionOption` (type: select, label: Action): Pilih aksi (misal, 'Start Another Flow'). Pilih Flow yang diinginkan."
      - t: "Klik 'Save' atau konfirmasi. Pastikan parameter 'active' (`type: toggle`) di tabel."

  MenjalankanFlowBerdasarkanKataKunciPesanPelangganPekerjaBotBotWorker: # Mirip dengan 'PekerjaBotResponsOtomatis...'
    u: https://youtu.be/lUa07VnMvdY
    r: Video ini menjelaskan cara mengatur deteksi pesan tertentu dari pelanggan untuk menjalankan Flow.
    s:
      - t: "Lihat langkah pada `FlowTriggers_AutomatedExecution:PekerjaBotResponsOtomatisBerdasarkanKataKunciPesanPengguna`. Menggunakan node 'Condition' di Flow Editor adalah metode yang paling fleksibel."

  MenjalankanFlowAITriggersBerdasarkanDeteksiNiatIntentPelanggan:
    u: https://youtu.be/A8dY4BE-Aok
    r: Video ini menjelaskan cara menggunakan AI Triggers untuk menjalankan Flow secara otomatis berdasarkan deteksi niat.
    s:
      - t: "Langkah 1: Membuat AI Trigger"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Ai Triggers**."
          - t: "Pada `section[title='Ai Triggers']`, klik `addButton` (`label: add`). Dialog 'Add New AI Trigger' muncul."
          - t: "Isi `fields`:"
            sub:
              - t: "`name` (input, placeholder: type ai trigger name)."
              - t: "`description` (textarea, label: What does this trigger do?)."
              - t: "`dataToCollect` (type: keyValueList, label: What data to collect?). Klik `addButtonLabel: add new`. Isi `keyPlaceholder: Prompt (optional)` dan `valuePlaceholder: Custom Field Name`."
              - t: "`triggeredFlow` (`<<: *commonFlowSelector`, label: What flow is triggered)."
              - t: "`outputMessage` (input, label: What is the output message? (Optional))."
          - t: "Simpan AI Trigger."
      - t: "Langkah 2: Menggunakan AI Trigger dalam Flow (dengan Aksi OpenAI)"
        sub:
          - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Pilih/buat flow."
          - t: "Tambahkan node `type: ActionsNode`. Klik node."
          - t: "Di sidebar (`configRef: FlowSidebarActions_ActionDropdownOptions`), pilih **'OpenAI' > 'Generate text'**."
          - t: "Pada `config` aksi 'Generate text', gunakan `aiTriggers` (`<<: *commonAiTriggersMultiSelect`). Pilih AI Trigger yang telah dibuat."
          - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."
      - t: "Alternatif: Jika AI Trigger langsung memicu flow (dari `fields.triggeredFlow` di Langkah 1), pastikan itu dikonfigurasi dengan benar."

  AITriggerEskalasiAgenManusiaBerdasarkanKondisiDinamis: # Lebih tepat menggunakan Condition Node
    u: https://www.youtube.com/live/IBRyfbV1-Vw?si=DvVl_XI18JAtcp6f
    r: Menjelaskan cara memindahkan percakapan ke CS manusia berdasarkan kondisi dinamis.
    s:
      - t: "Akses Flow Editor: **appConfig.sidebar.menu[title=Flows] > [Tab] Flows**. Pilih/buat flow."
      - t: "Tambahkan node `type: Condition`."
      - t: "Klik node 'Condition'. Di `sidebarConfig.button[label=+Condition]` (`componentRef: BtnForFilterOrCondition`), atur kondisi. Contoh:"
        sub:
          - t: "`firstRowOptions`: 'Custom Fields' > pilih custom field `budget_pengguna`."
          - t: "`secondRowOptions`: 'GreaterThan'."
          - t: "`thirdRowInputType`: `5000000`."
      - t: "Hubungkan output 'True' dari 'Condition' ke node `type: ActionsNode`."
      - t: "Klik node 'ActionsNode'. Di sidebar (`configRef: FlowSidebarActions_ActionDropdownOptions`), pilih **'Inbox' > 'Transfer Conversation to Human'**."
      - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."

UseCase_Examples_Detailed_Walkthroughs:
  ContohKasusMenghubungkanWebchatWidgetPekerjaAIWebsiteAnda:
    u: https://www.youtube.com/live/pohCJefEdxY?si=2JdBCsE7BFw-foV-
    r: Contoh implementasi chat widget Pekerja AI di website toko kamera sebagai use case praktis.
    s:
      - t: "Akses: **appConfig.header.settings** (ikon Settings/Gear) > **[Tab] channels** (dalam `SettingsConnectedPlatforms`)."
      - t: "Cari item `name: Web Chat`. Klik tombol **'Connect'** (`SettingsConnectedPlatforms.channels[name='Web Chat'].button`)."
      - t: "(Asumsi UI) Setelah proses koneksi/konfigurasi Web Chat selesai (menghubungkan ke flow, dll.), akan ada mekanisme untuk mendapatkan kode embed. Ini mungkin di halaman yang sama atau di daftar konfigurasi Web Chat yang sudah ada (misal, di **appConfig.sidebar.menu[title=Tools].main.tools[name='Testing Chat']** jika `Testing Chat` adalah untuk mengelola konfigurasi Web Chat)."
      - t: "Jika di **appConfig.sidebar.menu[title=Tools].main.tools[name='Testing Chat'] > pageContent.table > rowActions**, mungkin ada opsi 'Get Code' atau 'Embed'."
      - t: "Salin kode JavaScript yang diberikan."
      - t: "Tempelkan kode sebelum tag `</body>` di HTML website Anda."
      - t: "Simpan dan unggah. Muat ulang website untuk melihat widget."

  ContohKasusMembangunJalurFlowTerpisahSalesVsCustomerSupport:
    u: https://www.youtube.com/live/IBRyfbV1-Vw?si=DvVl_XI18JAtcp6f
    r: Contoh implementasi dua jalur flow berbeda untuk sales dan customer support.
    s:
      - t: "Langkah 1: Buat Custom Field `user_intent`"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Custom Fields > containers[title='Custom Fields'] > sections[title='Custom Fields']**."
          - t: "Klik `addButtonRef: AddCustomFieldButtonAndDialog`. Dialog 'Add New Custom Field' muncul."
          - t: "Isi `fields.name`: `user_intent`, `fields.type`: `text`. Klik 'Save'."
      - t: "Langkah 2: Desain Flow Utama di Flow Editor"
        sub:
          - t: "Akses Flow Editor. Setelah 'Starting Step', tambahkan node `type: ActionsNode`."
          - t: "Klik node. Di sidebar, pilih **'OpenAI' > 'Generate text'**."
            sub:
              - t: "Prompt: Klasifikasikan `{{last_input}}` menjadi 'sales' atau 'support'."
              - t: "`saveToCustomField`: Pilih `user_intent`."
          - t: "Tambahkan node `type: Condition`."
          - t: "Klik node 'Condition'. Gunakan `sidebarConfig.button[label=+Condition]` (`componentRef: BtnForFilterOrCondition`)."
            sub:
              - t: "Rule 1: `firstRowOptions`: 'Custom Fields' > `user_intent`. `secondRowOptions`: 'Is'. `thirdRowInputType`: 'sales'."
            - t: "Hubungkan output 'True' ke Flow Sales. Output 'False' ke Flow Support (atau Condition lain)."
      - t: "Klik **'Publish'** (`flowEditorPage.header.publishButton`)."

  PanduanLengkapMembangunSistemBookingLapanganIntegrasiTagCustomFieldAIKalender:
    u: internal-live-session-notes-2025-05-09
    r: Panduan langkah demi langkah untuk sistem booking lapangan.
    s:
      - t: "Tahap 1: Persiapan Tag"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Tags > sections[title=Tags]**."
          - t: "Klik `addButton` (`label: add`). Dialog 'Add New Tag' muncul. Isi `fields.tagName`. Ulangi untuk: `bl_perkenalan`, `bl_pengecekan`, `bl_penawaran`, `bl_pembayaran`, `bl_selesai`."
      - t: "Tahap 2: Persiapan Custom Fields & Account Fields"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Custom Fields**."
          - t: "**Custom Fields:** Di `containers[title='Custom Fields']`, klik `addButtonRef: AddCustomFieldButtonAndDialog`. Buat: `bl_nama_pelanggan` (text), `bl_reply_ai` (text), `bl_status_booking` (text), `bl_oprasional_mulai_request` (date and time), `bl_oprasional_terakhir_request` (date and time), `bl_respon_jadwal_kalender` (text), `bl_respon_konversi_openai` (text)."
          - t: "**Account Fields:** Di `containers[title='Account Fields']`, klik `addButton` (`label: add`). Buat: `bl_info_profil_bisnis` (text/long text, isi Value dengan prompt), `bl_info_gaya_komunikasi` (text/long text, isi Value), `bl_info_formula_oprasional` (text/long text, isi Value)."
      - t: "Tahap 3: Konfigurasi AI Triggers"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Ai Triggers > section[title='Ai Triggers']**."
          - t: "Klik `addButton` (`label: add`). Dialog 'Add New AI Trigger' muncul. Buat trigger `name: bl_1_perkenalan` (contoh dari `appConfig`):"
            sub:
              - t: "`description`: 'Jalankan saat pelanggan sebut nama & ingin booking.'"
              - t: "`dataToCollect`: Klik `addButtonLabel: add new`. Key: `status_booking_penawaran`, Value: `bl_status_booking`. Key: `nama_pelanggan`, Value: `bl_nama_pelanggan`."
              - t: "`triggeredFlow`: Pilih Flow Booking Utama."
          - t: "Ulangi untuk trigger lain."
      - t: "Tahap 4: Konfigurasi AI Parameters"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Flows] > [Tab] Ai Parameters > section[title='Ai Parameters']**."
          - t: "Klik `addButton` (`label: add`). Dialog 'Add New AI Parameter' muncul."
          - t: "Aturan 'Otomatisasi Tag Penawaran': Name: `Auto Tag Penawaran`. `whenThisHappens`: CF `bl_nama_pelanggan` changed AND CF `bl_status_booking` is 'penawaran'. `actionOption`: Remove Tag (all except `bl_penawaran`), Add Tag `bl_penawaran`."
          - t: "Pastikan 'active' toggle."
      - t: "Tahap 5: Desain Alur Flow Booking di Flow Editor"
        sub:
          - t: "Akses Flow Editor. Buat flow 'Booking Lapangan Utama'."
          - t: "Gunakan node 'Condition' untuk routing berdasarkan `bl_status_booking`."
          - t: "Gunakan node 'ActionsNode' > 'OpenAI' > 'Generate text' untuk olah respon (gunakan CF & Account Fields, save ke `bl_reply_ai`, pilih AI Trigger jika perlu)."
          - t: "Gunakan node 'SendMessage' untuk mengirim `{{bl_reply_ai}}` atau pesan statis."
          - t: "Untuk cek kalender: Node 'ActionsNode' > 'Appointments' > 'Appointment Scheduling'. Dialog 'Appointment Scheduling' muncul. Isi `appointmentAction: check availability`, `calendar`, `dateCustomField` (pilih `bl_oprasional_mulai_request` & `bl_oprasional_terakhir_request`). Simpan hasil ke `bl_respon_jadwal_kalender`."
          - t: "Kirim `{{bl_respon_jadwal_kalender}}` dengan 'SendMessage', tambahkan tombol 'Konfirmasi Booking' (`_flowSidebarNodeAddButtonDialogRef`)."
          - t: "Klik **'Publish'**."
      - t: "Tahap 6: Konfigurasi Integrasi Google Calendar"
        sub:
          - t: "Akses: **appConfig.sidebar.menu[title=Tools] > [Pilih tool] Google Calendar** (`tools[name='Google Calendar']`)."
          - t: "Di `pageContent.tabs[title='Calendars'] > section[title='Calendars']`, klik `addButton` (`label: add`). Dialog 'Add New Calendar' muncul. Isi `calendarName`: `Booking Lapangan Futsal`."
          - t: "Ikuti proses otorisasi. Pastikan 'active' toggle."
      - t: "Tahap 7: Persiapan Web Chatbot untuk Testing"
        sub:
          - t: "Akses: **appConfig.header.settings** (ikon Settings/pojok kanan atas/logo pekerja ai) > **[Tab] channels > Web Chat**."
          - t: "Klik `button[label=Connect]`. Konfigurasi Web Chat, hubungkan ke Flow 'Booking Lapangan Utama'."
          - t: "Dapatkan link/kode embed dari daftar Web Chat yang ada (mungkin di **appConfig.sidebar.menu[title=Tools].main.tools[name='Testing Chat']** jika itu tempatnya)."